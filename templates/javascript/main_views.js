// Generated by CoffeeScript 1.4.0
(function() {
  var FormDeleteModalView, GenericErrorView, PaymentProgressView, StripeTestConnectModalView, TransactionReportView,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  FormDeleteModalView = (function(_super) {

    __extends(FormDeleteModalView, _super);

    function FormDeleteModalView() {
      this.delete_form = __bind(this.delete_form, this);

      this.events = __bind(this.events, this);

      this.render = __bind(this.render, this);

      this.initialize = __bind(this.initialize, this);
      return FormDeleteModalView.__super__.constructor.apply(this, arguments);
    }

    FormDeleteModalView.prototype.initialize = function() {
      this.template = $('#delete_form_modal').template();
      this.render();
      return this;
    };

    FormDeleteModalView.prototype.render = function() {
      var tmpl_dict;
      tmpl_dict = {
        form_name: this.options.form_name
      };
      return $(this.el).html($.tmpl(this.template, tmpl_dict));
    };

    FormDeleteModalView.prototype.events = function() {
      return {
        'click #delete_form_btn': 'delete_form'
      };
    };

    FormDeleteModalView.prototype.delete_form = function(ev) {
      var ajax_params;
      ajax_params = {
        url: '/form_delete',
        type: 'POST',
        dataType: 'json',
        data: {
          id: this.options.form_id
        },
        error: function(obj, txt) {
          return alert('Error while deleting the form');
        },
        success: function(response) {
          if (response.error) {
            return alert("Error: " + response.error);
          } else if (response.success) {
            return window.location.reload();
          }
        }
      };
      $(ev.currentTarget).button('loading');
      return $.ajax(ajax_params);
    };

    return FormDeleteModalView;

  })(Backbone.View);

  StripeTestConnectModalView = (function(_super) {

    __extends(StripeTestConnectModalView, _super);

    function StripeTestConnectModalView() {
      this.render = __bind(this.render, this);

      this.initialize = __bind(this.initialize, this);
      return StripeTestConnectModalView.__super__.constructor.apply(this, arguments);
    }

    StripeTestConnectModalView.prototype.initialize = function() {
      this.template = $('#test_stripe_connect_modal').template();
      this.render();
      return this;
    };

    StripeTestConnectModalView.prototype.render = function() {
      var tmpl_dict;
      tmpl_dict = {
        test_stripe_connect_url: this.options.test_stripe_connect_url
      };
      return $(this.el).html($.tmpl(this.template, tmpl_dict));
    };

    return StripeTestConnectModalView;

  })(Backbone.View);

  PaymentProgressView = (function(_super) {

    __extends(PaymentProgressView, _super);

    function PaymentProgressView() {
      this.render = __bind(this.render, this);

      this.initialize = __bind(this.initialize, this);
      return PaymentProgressView.__super__.constructor.apply(this, arguments);
    }

    PaymentProgressView.prototype.initialize = function() {
      this.template = $('#payments_progress_bar_tmpl').template();
      this.render();
      return this;
    };

    PaymentProgressView.prototype.render = function() {
      return $(this.el).html($.tmpl(this.template));
    };

    return PaymentProgressView;

  })(Backbone.View);

  GenericErrorView = (function(_super) {

    __extends(GenericErrorView, _super);

    function GenericErrorView() {
      this.render = __bind(this.render, this);

      this.initialize = __bind(this.initialize, this);
      return GenericErrorView.__super__.constructor.apply(this, arguments);
    }

    GenericErrorView.prototype.initialize = function() {
      this.template = $('#generic_error_tmpl').template();
      this.render();
      return this;
    };

    GenericErrorView.prototype.render = function() {
      var tmpl_dict;
      tmpl_dict = {
        error_heading: this.options.error_heading,
        error_msg: this.options.error_msg
      };
      return $(this.el).html($.tmpl(this.template, tmpl_dict));
    };

    return GenericErrorView;

  })(Backbone.View);

  TransactionReportView = (function(_super) {

    __extends(TransactionReportView, _super);

    function TransactionReportView() {
      this.render = __bind(this.render, this);

      this.initialize = __bind(this.initialize, this);
      return TransactionReportView.__super__.constructor.apply(this, arguments);
    }

    TransactionReportView.prototype.initialize = function() {
      this.template = $('#transaction_report_tmpl').template();
      this.render();
      return this;
    };

    TransactionReportView.prototype.render = function() {
      var tmpl_dict;
      tmpl_dict = {
        transactions: this.options.transactions
      };
      return $(this.el).html($.tmpl(this.template, tmpl_dict));
    };

    return TransactionReportView;

  })(Backbone.View);

  window.FormDeleteModalView = FormDeleteModalView;

  window.StripeTestConnectModalView = StripeTestConnectModalView;

  window.PaymentProgressView = PaymentProgressView;

  window.GenericErrorView = GenericErrorView;

  window.TransactionReportView = TransactionReportView;

}).call(this);
